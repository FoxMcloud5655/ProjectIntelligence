buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

repositories {
	maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name 'CB Maven'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name "JEI Maven."
        url "http://dvs1.progwml6.com/files/maven"
    }
}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mc_version}-${config.mod_version}"
group = 'com.brandon3055.projectintelligence'
archivesBaseName = 'ProjectIntelligence'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

String buildNo = "9999"
version = version + ".${buildNo}"

dependencies {
    minecraft "net.minecraftforge:forge:${config.mc_version}-${config.forge_version}"
//    compile "com.brandon3055.brandonscore:BrandonsCore:${config.mc_version}-${config.bcore_version}:deobf"
    compile project(":BrandonsCore")
    compile "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"
    compile "mezz.jei:jei-1.15.2:6.0.0.4"
}

minecraft {
    mappings channel: "${config.mappings_channel}", version: "${config.mappings_version}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                projectintelligence {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                projectintelligence {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'projectintelligence', '--all', '--output', file('src/generated/resources/')

            mods {
                projectintelligence {
                    source sourceSets.main
                }
            }
        }
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "projectintelligence",
            "Specification-Vendor": "brandon3055",
            "Specification-Version": "${buildNo}",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"brandon3055",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}